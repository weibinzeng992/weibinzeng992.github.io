{"meta":{"title":"Webber·只有雨声","subtitle":"","description":"个人技术博客","author":"Stephen Webber","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"MongDB安装历程","slug":"MongDB安装历程","date":"2021-04-25T13:33:08.980Z","updated":"2021-04-25T13:45:28.296Z","comments":true,"path":"2021/04/25/MongDB安装历程/","link":"","permalink":"http://yoursite.com/2021/04/25/MongDB%E5%AE%89%E8%A3%85%E5%8E%86%E7%A8%8B/","excerpt":"这篇教程写的时候有些着急，有不足的地方还请谅解。谢谢~​","text":"这篇教程写的时候有些着急，有不足的地方还请谅解。谢谢~​ 1. 在mongodb的安装目录下创建data文件夹，E:\\MongoDB\\mongodb-win32-x86_64-2008plus-ssl-3.6.10\\data2. 在data文件夹内创建db文件夹和log文件夹3.在cmd进入E:\\MongoDB\\mongodb-win32-x86_64-2008plus-ssl-3.6.10\\bin目录下，然后执行mongod -dbpath E:\\MongoDB\\mongodb-win32-x86_64-2008plus-ssl-3.6.10\\data\\db如图： 这条命令是开启服务，它会一直运行，只要你要使用Mongodb，这个窗口就不能关） 4.然后在bin目录下另外打开一个cmd 在bin目录下执行mongo命令，之后就能正常使用了！！！如图 5.在浏览器输入http://127.0.0.1:27017/若出现如图 说明安装成功。 6.但每次需要手动启动mongodb服务，则不方便，所以我们把它加入到系统服务中。（若有问题，这一步可能需要提前做）把E:\\MongoDB\\mongodb-win32-x86_64-2008plus-ssl-3.6.10\\bin加入到系统变量path中。如图 7.在data\\log文件夹内创建空的mongod.log文件8.在mongdb主目录下创建mongod.cfg文件，输入12345systemLog: destination: file path: E:\\MongoDB\\mongodb-win32-x86_64-2008plus-ssl-3.6.10\\data\\log\\mongod.logstorage: dbPath: E:\\MongoDB\\mongodb-win32-x86_64-2008plus-ssl-3.6.10\\data\\db 如图： 保存。 9.cmd进入到bin目录下输入12mongod.exe --dbpath \"E:\\MongoDB\\mongodb-win32-x86_64-2008plus-ssl-3.6.10\\data\" --logpath \"E:\\MongoDB\\mongodb-win32-x86_64-2008plus-ssl-3.6.10\\data\\log\\mongod.log\" --install --serviceName \"MongoDB\" 如图 打开系统服务就可以看到mongdb服务了 打开cmd管理员。 若果不是用管理员运行，直接cmd会出现如图错误 10.在浏览器打开 即成功了。","categories":[],"tags":[]},{"title":"Day2HelloWorld","slug":"Day2HelloWorld","date":"2020-09-26T17:22:06.552Z","updated":"2020-09-26T18:17:59.613Z","comments":true,"path":"2020/09/27/Day2HelloWorld/","link":"","permalink":"http://yoursite.com/2020/09/27/Day2HelloWorld/","excerpt":"Hello World第一个java程序。。。淦。","text":"Hello World第一个java程序。。。淦。 新建文本文档，改为Hello.java 用notepad++打开 编写代码 12345public class Hello&#123; public static void main(String[] args)&#123; System.out.print(\"Hello World\"); &#125;&#125; 进入cmd，进入文件所在路径 输入javac Hello.java 会自动生成Hello.class文件 输入java Hello 执行代码,如下如所示。 第一个java程序执行完毕!2020.09.22 12:21","categories":[],"tags":[]},{"title":"Day3Java基础语法","slug":"Day3Java基础语法","date":"2020-09-26T17:21:54.447Z","updated":"2021-04-25T13:49:31.193Z","comments":true,"path":"2020/09/27/Day3Java基础语法/","link":"","permalink":"http://yoursite.com/2020/09/27/Day3Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/","excerpt":"Java程序运行机制见谅，这里大多都是自己听网课时的截图~~","text":"Java程序运行机制见谅，这里大多都是自己听网课时的截图~~ 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980/* 数据类型 */public class Demo01 &#123; public static void main(String[] args) &#123; //整数扩展： 进制 二进制0b 十进制 八进制0 十六进制0x int i = 10; int i2 = 010;//八进制0 int i3 = 0x10;//十六进制0x 0~9 A~F 16 System.out.println(i); System.out.println(i2); System.out.println(i3); System.out.println(\"=========================\"); //浮点数扩展 //BigDecimal 数学工具类 //float 有限 离散 舍入误差 大约 接近但不等于 //double /* 最好完全使用浮点数进行比较 最好完全使用浮点数进行比较 最好完全使用浮点数进行比较 */ float f = 0.1f;//0.1 double d = 1.0 / 10;//0.1 System.out.println(f==d);//false float d1 = 231313115453f; float d2 = d1 + 1; System.out.println(d1==d2); //================================== //字符扩展 System.out.println(\"====================\"); char c1 = 'A'; char c2 = '中'; System.out.println(c1); System.out.println((int) c1);//强制转换 System.out.println(c2); System.out.println((int)c2);//强制转换 //所有的字符本质还是数字 //编码 Unicode （a=97, A=65 ，中间隔了一个空格，一个空格=32） 2字节 //char类型表示十六进制值，其范围从\\u0000到\\uFFFF char c3 = '\\u0061'; System.out.println(c3);//a //转义字符 /* \\t 制表符 \\n 换行符 ...... */ System.out.println(\"Hello\\nworld\"); System.out.println(\"====================\"); String sa = new String(\"hello world\"); String sb = new String(\"hello world\"); System.out.println(sa==sb); String sc = \"hello world\"; String sd= \"hello world\"; System.out.println(sc==sd); //对象 从内存分析 //布尔值扩展 boolean flag = true; if(flag=true)&#123;&#125;//新手 if(flag)&#123;&#125;//老手 //以上两行代码等价 //Less is more！ &#125;&#125; 123456789101112131415161718192021222324252627public class Demo02 &#123; public static void main(String[] args) &#123; int i = 128; //强制转换 （类型）变量名 低----高 //byte b = (byte) i;//内存溢出 //自动转换 高----低 double b = i; System.out.println(i); System.out.println(b); /* 注意点： 1. 不能对布尔值进行转换 2. 不能把类型转换为不相干的类型 3. 在把高容量转到低容量的时候，需强制转换 4. 转换的时候可能存在内存溢出，或者精度问题！ */ System.out.println(\"=================\"); System.out.println((int) 23.7);//23 System.out.println((int) -45.89f);//-45 System.out.println(\"===============\"); char c = 'a'; int d = c+1; System.out.println((char) d); &#125;&#125; 12345678910111213141516public class Demo03 &#123; public static void main(String[] args) &#123; //操作比较大的数的时候，注意溢出问题 //JDK7新特性，数字之间可以用下划线分割 int money = 10_0000_0000; int years = 20; int total1 = money*years;//-1474836480,计算的时候溢出了 System.out.println(total1); long total2 = money*years;//默认是int，转换之前已经存在问题了 long total3 = money*(long)years;//先把一个数转换为long System.out.println(total2); System.out.println(total3); //注：在长整型后加L用大写，避免小写l与1混淆 &#125;&#125; 12345678910111213141516171819202122232425262728293031public class Demo05 &#123; //类变量 static static double salary = 2500; //属性：变量 //实例变量：从属于对象； 如果不自行初始化，这个类型的默认值为 0 0.0 //布尔值：默认是false //除了基本类型，其余的默认值都是null； String name; int age; //main方法 public static void main(String[] args) &#123; //局部变量； 必须声明和初始化值 int i=10; System.out.println(i); //变量类型 变量名字 = new Demo05() Demo05 demo05 = new Demo05(); System.out.println(demo05.age); System.out.println(demo05.name); //类变量static System.out.println(salary); &#125; //其他方法 public void add()&#123;// System.out.println(i); &#125;&#125; 12345678910public class Demo06 &#123; //修饰符，static final 不存在先后顺序 static final double PI = 3.14;// final static double PI = 3.14; public static void main(String[] args) &#123; System.out.println(PI); &#125;&#125; 需要注意，类常量的定义位于main方法的**外部**。 C++注释：const是Java保留的关键字，但目前并没有使用。在Java中，必须使用final定义常量。 位运算： 123456789101112131415161718192021222324252627282930313233343536package operator;//位运算public class Demo06 &#123; public static void main(String[] args) &#123; /* A = 0011 1100 B = 0000 1101 ---------------- A&amp;B = 0000 1100 //A与B：当两个都为1时，结果为1，否则为0. A|B = 0011 1101 //A或B：当有一个为1时，结果为1，否则为0. A^B = 0011 0001 //A亦或B：当两者相同时，结果为0，否则为1. ~B = 1111 0010 //B取反：若0则1，若1则0，完全相反. ========================================= 2*8=16 2*2*2*2 位运算效率极高！！！！ &lt;&lt; :向左移 即乘于2（*2） &gt;&gt; :向右移 即除于2（/2） 0000 0000 0 0000 0001 1 0000 0010 2 0000 0011 3 0000 0100 4 0000 0101 5 0000 0110 6 0000 0111 7 0000 1000 8 0001 0000 16 即2&lt;&lt;3 为16 */ System.out.println(2&lt;&lt;3); &#125;&#125; ​ &lt;&lt; :向左移 即乘于2（*2）​ &gt;&gt; :向右移 即除于2（/2） ​ 结合运算符与字符串拼接 123456789101112131415161718192021package operator;public class Demo07 &#123; public static void main(String[] args) &#123; int a = 10; int b = 20; a += b; a -= b; System.out.println(a);//10 //字符串连接符 + System.out.println(a+b);//30 //\"\"在前面，则自动转换为String类型，所以a与b进行拼接，结果为1020 System.out.println(\"\"+a+b); //\"\"在后面，则不会转换为String类型，所以a与b进行运算，结果为30 System.out.println(a+b+\"\"); &#125;&#125; 三元运算符 123456789101112131415package operator;//三元运算符public class Demo08 &#123; public static void main(String[] args) &#123; //x ? y :z //如果 x==true，则结果为y ，否则为z int score = 50; String type = score &lt; 60 ? \"不及格\":\"及格\";//必须掌握 //if System.out.println(type); &#125;&#125; 导入包时 1import com.webber.base.*; *为通配符. 123456789101112131415161718192021package com.webber.base;/** * @author Webber * @version 1.0 * @since 1.8 */public class Doc &#123; String name; /** * @author Webber * @param name * @return * @throws Exception */ public String test(String name) throws Exception&#123; return name; &#125;&#125; 路径前面加入cmd+空格，进入命令行操作 在后面输入如下代码，为把一些乱码转换为中文 1javadoc -encoding UTF-8 -charset UTF-8 Doc.java 打开index.html文件，即可看到自己生成的api文档 使用idea生成javadoc文档 https://blog.csdn.net/weixin_42140580/article/details/89635775","categories":[],"tags":[]},{"title":"Day1MarkDown学习","slug":"Day1MarkDown学习","date":"2020-09-21T13:15:11.596Z","updated":"2020-09-21T13:19:27.105Z","comments":true,"path":"2020/09/21/Day1MarkDown学习/","link":"","permalink":"http://yoursite.com/2020/09/21/Day1MarkDown%E5%AD%A6%E4%B9%A0/","excerpt":"Markdown学习20200921重新回到校园，打算重新开始拾起java，今天从狂神说Java的markdown开始，希望自己能坚持下去吧，欧力给！！！","text":"Markdown学习20200921重新回到校园，打算重新开始拾起java，今天从狂神说Java的markdown开始，希望自己能坚持下去吧，欧力给！！！ 标题： 一级标题：# +空格 + 文字 二级标题：## +空格 + 文字 三级标题：### +空格 + 文字 四级标题：#### +空格 + 文字 五级标题：##### +空格 + 文字 六级标题：###### +空格 + 文字 你好啊 你好 你好 22 123 123 GGG 分割线 — 分割线*** 插入图片 超链接 点击进入 代码块 ``` +java 1public 引导学生重新审视笔记 讲解笔记的正确定位 讲解优秀笔记的标准 笔记工具的特征及选择 这是第一级这是第二级这是第三级这是第四级这是第五级这是第六级 学号 姓名 性别 年龄 001 张三 男 20 002 李四 女 21 003 王五 男 23 java 是一门面向对象的编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承，指针等概念，因此java语言具有功能强大和简单易用两个特征。 12345public class HelloWorld&#123; public static void main(String[] args) &#123; System.out.println(\"Hello World\"); &#125;&#125; 12345public class HelloWorld&#123; public static void main(String[] args)&#123; System.out.println(\"Hello World\"); &#125;&#125; 12345public class HelloWorld&#123; public static void main(String[] args)&#123; System.out.println(\"Hello World\"); &#125;&#125;","categories":[],"tags":[]},{"title":"个人博客搭建","slug":"个人博客搭建","date":"2020-06-27T08:23:10.000Z","updated":"2020-06-27T09:03:41.072Z","comments":true,"path":"2020/06/27/个人博客搭建/","link":"","permalink":"http://yoursite.com/2020/06/27/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/","excerpt":"感慨一波–.– 也算是第一篇学习笔记吧~~这也是第一次写博客，打算把昨晚历经4个小时的搭建Hexo博客的过程记录下来。可能会有些遗漏的地方还请谅解。先说明一下，我用的是Win10操作系统进行搭建的。让我们淦起来吧！！！","text":"感慨一波–.– 也算是第一篇学习笔记吧~~这也是第一次写博客，打算把昨晚历经4个小时的搭建Hexo博客的过程记录下来。可能会有些遗漏的地方还请谅解。先说明一下，我用的是Win10操作系统进行搭建的。让我们淦起来吧！！！ 安装nodejs 需要进入https://nodejs.org 这个网站下载node。 这里点击左边这个进行下载，下载完成之后基本上都是傻瓜式安装，安装路径的话建议还是不要选择在C盘，毕竟空间有限。 安装完这个之后，先放一边，安装效果我们待会儿再看。 安装Git 因为我们还需要安装一个叫Git的东西，这个东西用我小白的话来说就是一个高级的命令行工具，比起win10系统的cmd好用多了。 直接输入git官网的网址https://gitforwindows.org 然后点击Download下载。 然后进行傻瓜式安装就完事儿了。 安装完之后打开Git Bash测试一下上面nodejs的效果，另外接下来的所有操作都建议在Git Bash里面进行，包括以后的编写博客等等。 安装cnpm 因为国内的镜像源的速度比较慢，所以我们安装cnpm淘宝的镜像源，这样的话比较快。 在命令行里输入npm install -g cnpm --registry=https://registry.npm.taobao.org 等待安装就可以了，安装完之后输入cnpm看看效果。 ​ 这样就说明安装成功了。还可以通过cnpm -v看一看版本号。 安装Hexo博客 在命令行里输入cnpm install -g hexo-cli稍等片刻，hexo博客就可以安装完成了。因为我这里已经安装了一次了，所以这个步骤就不上图了。 接着可以输入hexo -v检验一下安装的效果。 新建一个blog文件夹 只需要在命令行里输入mkdir blog即可,然后打开C盘的用户目录下你就可以看到blog文件夹了。 注意一下：往后的操作也都基本在这个文件夹里面进行，博客的文件都在这里面。如果在接下来搭建博客的操作中有哪一步是出错了搞不定的话就把这个文件夹删掉重头开始就可以了。（我是删了三四遍才搞定.） 安装hexo博客与编写实现 这里我们需要先进入刚刚创建的blog里面再进行操作。输入cd blog即可，我们也可以看到下一行的路径已经变为了/blog。 接着命令行里输入hexo init进行安装hexo。 到这里hexo博客就安装完成了。 输入ls -l就可以看到刚刚所安装的内容了。 当然也可以直接在我的电脑里打开blog文件夹查看。 接下来就可以启动博客啦，在命令行里输入hexo s就可以啦。 然后需要按照它这里给的网址，打开浏览器输入http://localhost:4000 就可以跑起来了。 打开后它会默认有一篇Hello World的文章，大致就只这个样子，我这里的网页布局不一样是因为我换过主题，换主题后面还会有教程。 之后的话就可以在命令行里按Ctrl+C退出。 接着可以在命令行里式着写一篇简单的博客，输入hexo new &quot;我的第一篇博客文章&quot;然后回车。它会默认在blog/source/_posts的目录下生成这篇博客。 我这里的话不知道什么原因中文的部分会乱码，但是不影响，可以不用去理会它。然后输入cd source/_posts/就可以进入到这个文件夹里再通过ls -l可以查看到刚刚新建的博客了。当然，你同样可以去我的电脑那里打开这个路径也可以看到生成了新建的博客。 然后马上就可以去写博客啦，在命令行输入vim 我的第一篇博客文章.md（注意后缀不要漏了），回车。 这里就是编写的页面了，通过键盘的方向键移动光标就可以在想输入的地方输入了。这里我当时出现的一个小问题，就是移动光标之后并不能直接输入，直接打字的话，是一直在闪烁的。至于到底要按哪个键才是切换为输入状态我现在也并不是非常清楚，不过自己乱按了几个键，似乎按大小写切换Capslock就可以了。 可以像我这里一样敲点东西进去。 ​ 输入完之后保存退出的操作一定要注意，当时我就是在这里蒙圈了好久。需要先按Esc键，然后输入冒号： 这个时候它的光标就会跳到最下面那行，最后输入 wq回车即可，wq是保存并退出的意思。 ​ 接下来的话是要退回blog文件夹的目录生成上面写的博客，先在命令行输入cd ../..回车，之后hexo clean清理一下,在通过hexo g生成。 这里就可以看到自己的博客了。接着就再次启动，输入hexo s然后打开浏览器输入网址http://localhost:4000 就可以看到博客了。 ​ 到这里的话个人博客就已经成功的搭建起来的，当然这里只能在本地访问，所以接下来把博客部署到远端。 把博客部署到Github 打开浏览器输入https://github.com/ 如果还没有账号的话就先注册一个。 然后会弹出这样一个页面 注意这里的仓库命名必须和你的用户名相同，也就是用户名.github.io然后Description可以随便写点东西描述一下，最后点下面的Create repository即可。 接着在回到命令行，回到blog的路径下输入cnpm install --save hexo-deployer-git回车。 完成之后输入法vim _config.yml 之后可能会弹出这样一个页面，也可能直接进去 如果这个页面的话按E就可以了。 然后到文章的最底部Deployment的部分会有type：&#39; &#39; 在单引号里面输入git，然后后换行输入repo: 输入github仓库的网址 最后输入branch: master 注意注意注意，这里是血的教训，type和repo和branch一定要对齐，每一个冒号后面记得要先空格再输入！！！！ 到这里就可以和上面一样按Esc键，冒号：wq保存并退出。 继续在命令行里输入hexo d部署到远端，稍等片刻马上就可以访问啦。 这里的话应该是会弹出github的登录窗口的，弹出来了的话就直接输入用户名和密码就可以了。 如果失败的话就需要给git配置身份，按照命令行输入自己的用户名和绑定的邮箱即可。这里当时我也是百度了好久才成功，这里卡住了的话建议去百度一下。 然后的话就可以打开浏览器输入用户名.github.io进入属于自己的博客啦！！！！参考文献https://blog.csdn.net/SmeagolYe/article/details/84763131https://blog.csdn.net/sinat_37781304/article/details/82729029https://www.bilibili.com/video/BV1Yb411a7ty www.codesheep.cn","categories":[],"tags":[]},{"title":"我的第一篇博客文章","slug":"我的第一篇博客文章","date":"2020-06-23T16:42:02.000Z","updated":"2021-04-25T13:53:11.688Z","comments":true,"path":"2020/06/24/我的第一篇博客文章/","link":"","permalink":"http://yoursite.com/2020/06/24/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/","excerpt":"","text":"没别的，记录一下2020年6月24日00:44:41 淦了4个小时，终于把个人博客搭建起来了。 晚安","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-06-23T14:46:47.883Z","updated":"2020-09-21T13:21:43.851Z","comments":true,"path":"2020/06/23/hello-world/","link":"","permalink":"http://yoursite.com/2020/06/23/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}